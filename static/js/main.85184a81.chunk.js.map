{"version":3,"sources":["component/Text.js","component/Status.js","component/InputText.js","component/Task.js","screen/home.js","App.js","reportWebVitals.js","index.js"],"names":["Text","props","isTitle","content","Status","status","style","color","fontWeight","textDecoration","InputText","type","onChange","e","console","log","target","value","getValue","index","Task","isLastItem","isFirstItem","title","updateData","React","useState","isEditing","setIsEditting","inputValue","setInputValue","onClick","Home","dataTask","setDataTask","dataTemp","className","textTransform","map","item","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85184a81.chunk.js","sourcesContent":["\r\nfunction Text(props) {\r\n    const { isTitle, content } = props;\r\n    if (isTitle) {\r\n        return <h1>{content}</h1>\r\n    } else {\r\n        return <p>{content}</p>\r\n    }\r\n\r\n    // return (\r\n    //     <p style={isTitle ? { fontWeight: 'bold' } : {}}>  {content}</p>\r\n\r\n    // );\r\n}\r\nexport default Text","\r\nfunction Status(props) {\r\n    const { status } = props;\r\n    switch (status) {\r\n        case 'done':\r\n            return <p style={{ color: 'green', fontWeight: 'bold' }}>{status} </p>\r\n        case 'cancel':\r\n            return <p style={{ color: 'red', textDecoration: 'line-through' }}>{status}</p>\r\n        case 'pending':\r\n            return <p style={{ color: 'violet', textDecoration: 'underline' }}>{status}</p>\r\n        default:\r\n            return <p>{status}</p>\r\n    }\r\n}\r\nexport default Status","\r\nfunction InputText(props) {\r\n    return (\r\n        <input type='text' onChange={(e) => {\r\n\r\n            console.log('input text', e.target.value)\r\n            props.getValue(e.target.value, props.index)\r\n\r\n        }} />\r\n    )\r\n}\r\nexport default InputText","import React from 'react';\r\nimport Text from './Text';\r\nimport Status from './Status';\r\nimport InputText from './InputText';\r\n\r\nfunction Task(props) {\r\n    const { isLastItem, isFirstItem, content, title, status, updateData, index, } = props;\r\n    const chooseStyle = () => {\r\n        if (isLastItem) return { color: 'red' };\r\n        if (isFirstItem) return { color: 'blue' }\r\n\r\n        return\r\n    }\r\n    const [isEditing, setIsEditting] = React.useState(false);\r\n    const [inputValue, setInputValue] = React.useState({ value: '', index: 0 });\r\n    const getValue = (value, index) => {\r\n        setInputValue({ value: value, index: index });\r\n    }\r\n\r\n    const saveData = () => {\r\n        setIsEditting(false)\r\n        updateData(inputValue.value, inputValue.index)\r\n    }\r\n    const showInputText = () => {\r\n        if (isEditing) {\r\n            return (\r\n                <div><InputText getValue={getValue} index={index} />\r\n                    <p onClick={() => {\r\n                        saveData()\r\n                    }}>Save</p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        else {\r\n            return (<div onClick={() => { setIsEditting(true) }}>\r\n                <Text isTitle content={title} />\r\n                <Text content={content} />\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <li style={\r\n                chooseStyle()\r\n            }>\r\n                {showInputText()}\r\n                <Status status={status} />\r\n            </li>\r\n        </div>\r\n    );\r\n}\r\nexport default Task","import '../style/home.css'\r\nimport Task from '../component/Task.js'\r\nimport React, { useState } from 'react'\r\nfunction Home() {\r\n    const title = {\r\n        textTransform: 'uppercase',\r\n    }\r\n    const DATA = [\r\n        {\r\n            title: 'title1',\r\n            content: 'hoc reactjs',\r\n            status: 'done',\r\n\r\n        },\r\n        {\r\n            title: 'title2',\r\n            content: 'hoc Js',\r\n            status: 'cancel',\r\n        },\r\n        {\r\n            title: 'title3',\r\n            content: 'hoc html',\r\n            status: 'pending',\r\n        },\r\n    ]\r\n    const [dataTask, setDataTask] = useState(DATA)\r\n    const updateData = (value, index) => {\r\n        \r\n        const dataTemp =[ ...dataTask ];\r\n        dataTask[index].content = value;\r\n        setDataTask(dataTemp);\r\n    }\r\n\r\n    const renderTask = () => {\r\n        return dataTask.map((item, index) => {\r\n            return <Task\r\n                index={index}\r\n                key={index}\r\n                {...item}\r\n                isLastItem={index === dataTask.length - 1}\r\n                isFirstItem={index === 0}\r\n                updateData={updateData}\r\n            />\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 style={title}>To do list</h2>\r\n            <ul>\r\n                {renderTask()}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\nexport default Home","import Home from './screen/home';\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <Home></Home>;\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}